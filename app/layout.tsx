import type { Metadata, Viewport } from 'next'
import { Montserrat } from 'next/font/google'
import './globals.css'
import { StoreProvider } from '@/store/provider'
import { SidebarProvider } from '@/context/SidebarProvider'
import { ModalProvider } from '@/context/ModalProvider'
import { OverlayProvider } from '@/context/OverlayProvider'
import { BottomBarProvider } from '@/context/BottomBarProvider'
import { ProfileProvider } from '@/context/ProfileProvider'
import { LanguageProvider } from '@/context/LanguageProvider'
import { I18nProvider } from '@/context/I18nProvider'
import LayoutContent from '@/components/LayoutContent'
import LoadingScreen from '@/components/LoadingScreen'

const montserrat = Montserrat({
  subsets: ['latin'], // Specify the character subsets you need
  weight: ['400', '700'], // Define the weights you want to use
  variable: '--font-montserrat', // Optional: Define a CSS variable for easier use with Tailwind CSS
})

export const metadata: Metadata = {
  title: 'OK777',
  description: 'Generated by create next app',
}

export const viewport: Viewport = {
  width: 'device-width',
  initialScale: 1,
  maximumScale: 1,
  userScalable: false,
  themeColor: '#0E141C',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en">
      <body className={`${montserrat.className} antialiased`}>
        <StoreProvider>
          <I18nProvider>
            <LoadingScreen />
            <SidebarProvider>
              <LanguageProvider>
                <ModalProvider>
                  <OverlayProvider>
                    <BottomBarProvider>
                      <ProfileProvider>
                        <LayoutContent>{children}</LayoutContent>
                      </ProfileProvider>
                    </BottomBarProvider>
                  </OverlayProvider>
                </ModalProvider>
              </LanguageProvider>
            </SidebarProvider>
          </I18nProvider>
        </StoreProvider>
      </body>
    </html>
  )
}
